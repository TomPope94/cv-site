{"ast":null,"code":"import _slicedToArray from \"/home/tom/Documents/Projects/PersonalSites/cv-site/cv-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/tom/Documents/Projects/PersonalSites/cv-site/cv-react/src/components/Experience.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport anime from 'animejs';\nimport { PROJECTS, CONTACT } from '../constants/routes';\nconst styles = {\n  pageContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    height: '100vh',\n    width: '100vw',\n    background: '#eceff4'\n  },\n  animationContainer: {\n    height: '100vh',\n    width: '100vw',\n    background: '#2e3440',\n    top: 0,\n    position: 'absolute',\n    display: 'fixed'\n  },\n  buttons: {\n    height: 30\n  }\n};\n\nconst Experience = () => {\n  useEffect(() => {\n    animateContainer(true);\n  }, []);\n\n  const _useState = useState({\n    destination: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        toRedirect = _useState2[0],\n        setRedirect = _useState2[1];\n\n  const destination = toRedirect.destination;\n\n  const delay = ms => new Promise(res => setTimeout(res, ms));\n\n  const animateContainer = open => {\n    const animationDirection = open ? 'normal' : 'reverse';\n    anime({\n      targets: '.animationContainer',\n      scaleY: [1, 0],\n      duration: 750\n    });\n  };\n\n  const handleClick = async stateVal => {\n    animateContainer(false);\n    await delay(1000);\n    setRedirect({\n      destination: stateVal\n    });\n  };\n\n  let toRender;\n\n  if (destination != '') {\n    toRender = React.createElement(Redirect, {\n      to: destination,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    });\n  } else {\n    toRender = React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: styles.animationContainer,\n      className: \"animationContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: styles.pageContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      style: styles.buttons,\n      onClick: () => handleClick('/projects'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Back\"), React.createElement(\"button\", {\n      style: styles.buttons,\n      onClick: () => handleClick('/contact'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Next\")));\n  }\n\n  return toRender;\n};\n\nexport default Experience;","map":{"version":3,"sources":["/home/tom/Documents/Projects/PersonalSites/cv-site/cv-react/src/components/Experience.js"],"names":["React","Fragment","useEffect","useState","Redirect","anime","PROJECTS","CONTACT","styles","pageContainer","display","flexDirection","height","width","background","animationContainer","top","position","buttons","Experience","animateContainer","destination","toRedirect","setRedirect","delay","ms","Promise","res","setTimeout","open","animationDirection","targets","scaleY","duration","handleClick","stateVal","toRender"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport anime from 'animejs';\n\nimport { PROJECTS, CONTACT } from '../constants/routes';\n\nconst styles = {\n  pageContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    height: '100vh',\n    width: '100vw',\n    background: '#eceff4'\n  },\n  animationContainer: {\n    height: '100vh',\n    width: '100vw',\n    background: '#2e3440',\n    top: 0,\n    position: 'absolute',\n    display: 'fixed'\n  },\n  buttons: {\n    height: 30\n  }\n};\n\nconst Experience = () => {\n  useEffect(() => {\n    animateContainer(true);\n  }, []);\n\n  const [toRedirect, setRedirect] = useState({\n    destination: ''\n  });\n  const { destination } = toRedirect;\n\n  const delay = ms => new Promise(res => setTimeout(res, ms));\n  const animateContainer = open => {\n    const animationDirection = open ? 'normal' : 'reverse';\n\n    anime({\n      targets: '.animationContainer',\n      scaleY: [1, 0],\n      duration: 750\n    });\n  };\n\n  const handleClick = async stateVal => {\n    animateContainer(false);\n    await delay(1000);\n    setRedirect({ destination: stateVal });\n  };\n\n  let toRender;\n  if (destination != '') {\n    toRender = <Redirect to={destination} />;\n  } else {\n    toRender = (\n      <Fragment>\n        <div style={styles.animationContainer} className=\"animationContainer\" />\n        <div style={styles.pageContainer}>\n          <button\n            style={styles.buttons}\n            onClick={() => handleClick('/projects')}\n          >\n            Back\n          </button>\n          <button\n            style={styles.buttons}\n            onClick={() => handleClick('/contact')}\n          >\n            Next\n          </button>\n        </div>\n      </Fragment>\n    );\n  }\n\n  return toRender;\n};\n\nexport default Experience;\n"]},"metadata":{},"sourceType":"module"}