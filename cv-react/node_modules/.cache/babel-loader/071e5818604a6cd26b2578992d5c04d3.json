{"ast":null,"code":"import _slicedToArray from \"/home/tom/Documents/Projects/PersonalSites/cv-site/cv-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/tom/Documents/Projects/PersonalSites/cv-site/cv-react/src/components/ProjectCards.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport anime from 'animejs';\nimport { WELCOME, EXPERIENCE } from '../constants/routes';\nimport Commercial from './cards/Commercial';\nimport FlipCard from './cards/FlipCard';\nconst styles = {\n  pageContainer: {\n    height: '100vh',\n    width: '100vw',\n    background: '#2e3440'\n  },\n  cardsContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  card: {\n    // flexGrow: 1,\n    // background: '#eceff4',\n    borderRadius: 20,\n    margin: 25,\n    marginTop: '10vh',\n    height: '75vh',\n    boxShadow: '0 5px 10px black'\n  }\n};\n\nconst ProjectCards = () => {\n  const _useState = useState({\n    destination: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        toRedirect = _useState2[0],\n        setRedirect = _useState2[1];\n\n  const destination = toRedirect.destination;\n  useEffect(() => {\n    cardsAnimation(true);\n  }, []);\n\n  const cardsAnimation = open => {\n    const animationDirection = open ? 'normal' : 'reverse';\n    anime({\n      targets: '.projectCard',\n      scaleY: [0, 1],\n      direction: animationDirection,\n      duration: 750\n    });\n  };\n\n  const delay = ms => new Promise(res => setTimeout(res, ms));\n\n  const handleClick = async stateVal => {\n    cardsAnimation(false);\n    await delay(1000);\n    setRedirect({\n      destination: stateVal\n    });\n  };\n\n  let toRender;\n\n  if (destination != '') {\n    toRender = React.createElement(Redirect, {\n      to: destination,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    });\n  } else {\n    toRender = React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: styles.pageContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => handleClick('/'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Back\")), React.createElement(\"div\", {\n      style: styles.cardsContainer,\n      className: \"cardsContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: styles.card,\n      className: \"projectCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(FlipCard, {\n      style: styles.card,\n      className: \"projectCard\",\n      cardBack: Commercial,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: styles.card,\n      className: \"projectCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(FlipCard, {\n      style: styles.card,\n      className: \"projectCard\",\n      cardBack: Commercial,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: styles.card,\n      className: \"projectCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(FlipCard, {\n      style: styles.card,\n      className: \"projectCard\",\n      cardBack: Commercial,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => handleClick('/experience'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Next\")))));\n  }\n\n  return toRender;\n};\n\nexport default ProjectCards;","map":{"version":3,"sources":["/home/tom/Documents/Projects/PersonalSites/cv-site/cv-react/src/components/ProjectCards.js"],"names":["React","Fragment","useEffect","useState","Redirect","anime","WELCOME","EXPERIENCE","Commercial","FlipCard","styles","pageContainer","height","width","background","cardsContainer","display","flexDirection","justifyContent","card","borderRadius","margin","marginTop","boxShadow","ProjectCards","destination","toRedirect","setRedirect","cardsAnimation","open","animationDirection","targets","scaleY","direction","duration","delay","ms","Promise","res","setTimeout","handleClick","stateVal","toRender"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport anime from 'animejs';\n\nimport { WELCOME, EXPERIENCE } from '../constants/routes';\nimport Commercial from './cards/Commercial';\nimport FlipCard from './cards/FlipCard';\n\nconst styles = {\n  pageContainer: {\n    height: '100vh',\n    width: '100vw',\n    background: '#2e3440'\n  },\n  cardsContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  card: {\n    // flexGrow: 1,\n    // background: '#eceff4',\n    borderRadius: 20,\n    margin: 25,\n    marginTop: '10vh',\n    height: '75vh',\n    boxShadow: '0 5px 10px black'\n  }\n};\n\nconst ProjectCards = () => {\n  const [toRedirect, setRedirect] = useState({\n    destination: ''\n  });\n\n  const { destination } = toRedirect;\n\n  useEffect(() => {\n    cardsAnimation(true);\n  }, []);\n\n  const cardsAnimation = open => {\n    const animationDirection = open ? 'normal' : 'reverse';\n\n    anime({\n      targets: '.projectCard',\n      scaleY: [0, 1],\n      direction: animationDirection,\n      duration: 750\n    });\n  };\n  const delay = ms => new Promise(res => setTimeout(res, ms));\n\n  const handleClick = async stateVal => {\n    cardsAnimation(false);\n    await delay(1000);\n    setRedirect({ destination: stateVal });\n  };\n\n  let toRender;\n  if (destination != '') {\n    toRender = <Redirect to={destination} />;\n  } else {\n    toRender = (\n      <Fragment>\n        <div style={styles.pageContainer}>\n          <div>\n            <div>\n              <button onClick={() => handleClick('/')}>Back</button>\n            </div>\n            <div style={styles.cardsContainer} className=\"cardsContainer\">\n              <div style={styles.card} className=\"projectCard\">\n                <FlipCard\n                  style={styles.card}\n                  className=\"projectCard\"\n                  cardBack={Commercial}\n                />\n              </div>\n              <div style={styles.card} className=\"projectCard\">\n                <FlipCard\n                  style={styles.card}\n                  className=\"projectCard\"\n                  cardBack={Commercial}\n                />\n              </div>\n              <div style={styles.card} className=\"projectCard\">\n                <FlipCard\n                  style={styles.card}\n                  className=\"projectCard\"\n                  cardBack={Commercial}\n                />\n              </div>\n            </div>\n            <div>\n              <button onClick={() => handleClick('/experience')}>Next</button>\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n\n  return toRender;\n};\n\nexport default ProjectCards;\n"]},"metadata":{},"sourceType":"module"}