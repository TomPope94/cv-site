{"ast":null,"code":"import _slicedToArray from \"/home/tom/Documents/Projects/PersonalSites/cv-site/cv-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/tom/Documents/Projects/PersonalSites/cv-site/cv-react/src/components/ProjectCards.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport anime from 'animejs';\nimport { WELCOME, EXPERIENCE } from '../constants/routes';\nconst styles = {\n  pageContainer: {\n    height: '100vh',\n    width: '100vw',\n    background: '#2e3440'\n  },\n  cardsContainer: {\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  card: {\n    flexGrow: 1,\n    background: '#eceff4',\n    borderRadius: 10,\n    margin: 25,\n    marginTop: '10vh',\n    height: '75vh',\n    boxShadow: '0 5px 10px black'\n  }\n};\n\nconst ProjectCards = () => {\n  const _useState = useState({\n    destination: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        toRedirect = _useState2[0],\n        setRedirect = _useState2[1];\n\n  const destination = toRedirect.destination;\n  useEffect(() => {\n    openCardsAnimation();\n  }, []);\n\n  const openCardsAnimation = () => {\n    anime({\n      targets: '.projectCard',\n      scaleY: [0, 1]\n    });\n  };\n\n  const closeCardsAnimation = () => {\n    const timeline = anime.timeline({});\n  };\n\n  const handleClick = stateVal => {\n    debugger;\n    setRedirect({\n      destination: stateVal\n    });\n  };\n\n  let toRender;\n\n  if (destination != '') {\n    toRender = React.createElement(Redirect, {\n      to: destination,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    });\n  } else {\n    toRender = React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: styles.pageContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: styles.cardsContainer,\n      className: \"cardsContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: styles.card,\n      className: \"projectCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => handleClick({\n        WELCOME\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Back\"), React.createElement(\"button\", {\n      onClick: () => handleClick({\n        EXPERIENCE\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Next\")), React.createElement(\"div\", {\n      style: styles.card,\n      className: \"projectCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: styles.card,\n      className: \"projectCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }))));\n  }\n\n  return toRender;\n};\n\nexport default ProjectCards;","map":{"version":3,"sources":["/home/tom/Documents/Projects/PersonalSites/cv-site/cv-react/src/components/ProjectCards.js"],"names":["React","Fragment","useEffect","useState","Redirect","anime","WELCOME","EXPERIENCE","styles","pageContainer","height","width","background","cardsContainer","display","flexDirection","card","flexGrow","borderRadius","margin","marginTop","boxShadow","ProjectCards","destination","toRedirect","setRedirect","openCardsAnimation","targets","scaleY","closeCardsAnimation","timeline","handleClick","stateVal","toRender"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport anime from 'animejs';\n\nimport { WELCOME, EXPERIENCE } from '../constants/routes';\n\nconst styles = {\n  pageContainer: {\n    height: '100vh',\n    width: '100vw',\n    background: '#2e3440'\n  },\n  cardsContainer: {\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  card: {\n    flexGrow: 1,\n    background: '#eceff4',\n    borderRadius: 10,\n    margin: 25,\n    marginTop: '10vh',\n    height: '75vh',\n    boxShadow: '0 5px 10px black'\n  }\n};\n\nconst ProjectCards = () => {\n  const [toRedirect, setRedirect] = useState({\n    destination: ''\n  });\n\n  const { destination } = toRedirect;\n\n  useEffect(() => {\n    openCardsAnimation();\n  }, []);\n\n  const openCardsAnimation = () => {\n    anime({\n      targets: '.projectCard',\n      scaleY: [0, 1]\n    });\n  };\n\n  const closeCardsAnimation = () => {\n    const timeline = anime.timeline({});\n  };\n\n  const handleClick = stateVal => {\n    debugger;\n    setRedirect({ destination: stateVal });\n  };\n\n  let toRender;\n  if (destination != '') {\n    toRender = <Redirect to={destination} />;\n  } else {\n    toRender = (\n      <Fragment>\n        <div style={styles.pageContainer}>\n          <div style={styles.cardsContainer} className=\"cardsContainer\">\n            <div style={styles.card} className=\"projectCard\">\n              <button onClick={() => handleClick({ WELCOME })}>Back</button>\n              <button onClick={() => handleClick({ EXPERIENCE })}>Next</button>\n            </div>\n            <div style={styles.card} className=\"projectCard\" />\n            <div style={styles.card} className=\"projectCard\" />\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n\n  return toRender;\n};\n\nexport default ProjectCards;\n"]},"metadata":{},"sourceType":"module"}